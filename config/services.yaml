# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: pl_PL
    google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'
    odiseo_blog.model.article.class: App\Entity\Blog\Article
    odiseo_blog.model.article_category.class: Odiseo\BlogBundle\Model\ArticleCategory
    odiseo_blog.model.article_comment.class: Odiseo\SyliusBlogPlugin\Entity\ArticleComment

imports:
    - { resource: 'services/_sonata_events.yml' }
    - { resource: 'services/_menu.yml' }
    - { resource: "@BitBagSyliusCmsPlugin/Resources/config/services/sitemap_provider.yml" }

services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: true

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false
        bind:
            Sylius\Component\Core\Factory\CartItemFactoryInterface $orderItemFactory: '@sylius.factory.order_item'

    _instanceof:
        Sylius\Bundle\ResourceBundle\Controller\ResourceController:
            autowire: false
        Sylius\Bundle\ResourceBundle\Form\Type\AbstractResourceType:
            autowire: false
            
    app.block_event_listener.admin.layout.scripts:
        class: Sylius\Bundle\UiBundle\Block\BlockEventListener
        arguments:
            - 'App/Shop/_javascripts.html.twig'
        tags:
            - { name: kernel.event_listener, event: sonata.block.event.sylius.shop.layout.javascripts, method: onBlockEvent }

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    app.facebook_messenger_widget.rendering.block:
        class: Sylius\Bundle\UiBundle\Block\BlockEventListener
        arguments:
            - 'elements/facebook-widget.html.twig'
        tags:
            - { name: kernel.event_listener, event: sonata.block.event.sylius.shop.layout.after_body, method: onBlockEvent }

    app.form.type.checkout_select_shipping_and_payment:
       class: App\Form\Type\Checkout\SelectShippingAndPaymentType
       public: true
       arguments: ['%sylius.model.order.class%', '%sylius.form.type.checkout_select_shipping.validation_groups%']
       tags:
           - { name: form.type }
    app.request.matcher:
        class: Symfony\Component\HttpFoundation\RequestMatcher

    sylius.listener.checkout_redirect:
        class: Sylius\Bundle\CoreBundle\Checkout\CheckoutRedirectListener
        tags:
            - { name: 'kernel.event_listener', event: 'sylius.order.post_address',  method: 'handleCheckoutRedirect'}
            - { name: 'kernel.event_listener', event: 'sylius.order.post_select_shipping',  method: 'handleCheckoutRedirect'}
            - { name: 'kernel.event_listener', event: 'sylius.order.post_payment',  method: 'handleCheckoutRedirect'}
            - { name: 'kernel.event_listener', event: 'sylius.order.post_test',  method: 'handleCheckoutRedirect'}
        arguments:
            - '@request_stack'
            - '@sylius.router.checkout_state'
            - '@app.request.matcher'

    app.refund.form.type:
        class: App\Form\Type\RefundType
        tags:
            - { name: form.type }
        arguments: ['%app.model.order_refund.class%', []]
        
    app.form.extension.type.article:
        class: App\Form\Extension\ArticleTranslationTypeExtension
        tags:
            - { name: form.type_extension, extended_type: Odiseo\BlogBundle\Form\Type\ArticleTranslationType }
        
    app.controller_action.shop_add_to_cart:
        public: true
        class: App\Controller\Action\Shop\AddToCart

    app.refund.form.type.refund:
        class: App\Form\Type\RefundType
        arguments:
            - "%app.model.order_refund.class%"
            - ['sylius']
        tags:
            - { name: form.type }

    app.refund.context.setup.block:
        class: Tests\BitBag\SyliusCmsPlugin\Behat\Context\Setup\BlockContext
        arguments:
            - "@sylius.behat.shared_storage"
            - "@bitbag_sylius_cms_plugin.behat.random_string_generator"
            - "@bitbag_sylius_cms_plugin.factory.block"
            - "@bitbag_sylius_cms_plugin.repository.block"

    app.importer.image:
        class: App\Importer\ImageExternalImporter
        arguments:
            - '%sylius_core.public_dir%/media/tmp/'

    app.processor.products:
        class: App\Processor\ProductProcessor
        arguments:
            - "@sylius.processor.products"
            - "@sylius.repository.product"
            - '@sylius.service.product_image_code'
            - '@sylius.factory.product_image'
            - '@app.importer.image'
            - '@sylius.image_uploader'
            - ['Code', 'Locale', 'Name', 'Description', 'Short_description', 'Meta_description', 'Meta_keywords', 'Main_taxon', 'Taxons', 'Channels', 'Enabled', 'Price']

    sylius.importer.products.csv:
        class: FriendsOfSylius\SyliusImportExportPlugin\Importer\ResourceImporter
        arguments:
            - "@sylius.factory.csv_reader"
            - "@sylius.manager.product"
            - "@app.processor.products"
            - "@sylius.importer.result"
            - "%sylius.importer.batch_size%"
            - "%sylius.importer.fail_on_incomplete%"
            - "%sylius.importer.stop_on_failure%"
        tags:
            - { name: sylius.importer, type: product, format: csv }
