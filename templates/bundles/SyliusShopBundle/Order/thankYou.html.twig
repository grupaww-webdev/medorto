{% extends '@SyliusShop/Layout/cart.html.twig' %}

{% import "@SyliusShop/Common/Macro/money.html.twig" as money %}

{% set header = 'sylius.ui.cart.step_4.header' %}

{% block cart_content %}
    {% set shipment = order.shipments.first %}
    {% set payment = order.payments.first %}

    <div class="cart__confirmation container wrapper">
        <div class="row">
            <div class="col-xs-12 col-md-4 col-md-offset-1">
                <p class="flex flex--between">{{ 'sylius.ui.order_number'|trans }}: <b class="nrzam">{{ order.number }}</b></p>
                <p class="flex flex--between">{{ 'sylius.ui.shipment_method'|trans }}: <b>{{ shipment.method.name }}</b></p>
                <p class="flex flex--between">{{ 'sylius.ui.payment_method'|trans }}: <b>{{ payment.method.name }}</b></p>

<p class="kwota" >{{ money.format(order.getTotal(), sylius.currencyCode) }} </p>
<p class="clientem">{{ order.customer.email }}</p>

        </div>
        </div>
        <div class="row">
            <div class="col-xs-12 col-md-11 col-md-offset-1">
                <h2 class="cart__confirmation__subtitle text-darkBlue">{{ 'sylius.ui.shipping_address'|trans }}</h2>
            </div>
            <div class="col-xs-12 col-md-4 col-md-offset-1">
                {% set address = order.shippingAddress %}
                <p class="flex flex--between">{{ 'sylius.ui.full_name'|trans }}: <b>{{ address.firstName }} {{ address.lastName }}</b></p>
                {% if address.company %}
                    <p class="flex flex--between">{{ 'sylius.ui.company'|trans }}: <b>{{ address.company }}</b></p>
                {% endif %}
                <p class="flex flex--between">{{ 'sylius.ui.street'|trans }}: <b>{{ address.street }}</b></p>
                <p class="flex flex--between">{{ 'sylius.ui.city'|trans }}: <b>{{ address.city }}</b></p>
                <p class="flex flex--between">{{ 'sylius.ui.postcode'|trans }}: <b>{{ address.postcode }}</b></p>
                <p class="flex flex--between">{{ 'sylius.ui.country'|trans }}: <b>{{ address.countryCode|sylius_country_name }}</b></p>
            </div>
        </div>
        {% set lastPayment = order.payments.last() %}
        {% if lastPayment != false %}
            {%  if lastPayment.method.instructions is not null %}
                <div class="row">
                    <div class="col-xs-12 col-md-11 col-md-offset-1">
                        <h2 class="cart__confirmation__title text-darkBlue">{{ 'sylius.ui.payment'|trans }}:</h2>
                        <div class="flex flex--vcenter">
                            <a href="{{ path('sylius_shop_order_pay', {tokenValue: order.tokenValue}) }}" class="cart__confirmation__payment text-blue font-bold flex flex--center">
                                Płatność online {{ money.format(order.total, order.currencyCode) }}
                            </a>
                        </div>
                    </div>
                </div>
            {% endif %}
        {% endif %}
    </div>
    <div class="flex flex--end">
        <a href="{{ path('sylius_shop_homepage') }}" class="cart__confirmation__button button button--blue">{{ 'sylius.ui.back_to_shop'|trans }}</a>

    </div>



{% verbatim %}
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/@emailjs/browser@3/dist/email.min.js"></script>
    <script type="text/javascript">
        (function() {
            // https://dashboard.emailjs.com/admin/account
            emailjs.init('9TCYVb9B-KjtztqnV');
        })();
    </script>
    <script>
window.addEventListener('load', () => {
    setinputs();
})
function setinputs(){
    var dzis = new Date();


var data = dzis.toLocaleDateString();
    emailjs.send("service_7ups8yr","template_djkujzs",{
        nrzam: document.querySelector('.nrzam').innerHTML,
        data_zam: data,
        kwota_Zam: document.querySelector('.kwota').innerHTML.replace('&nbsp;',' '),
        email_medorto: "zamowienia@medorto.pl",
        email_klienta: localStorage.getItem('emailclienta'),
        });
}

</script>
<script>
window.addEventListener('load',() => {
purchased();

})
function purchased(){

var nrzam= document.querySelector('.nrzam').innerHTML;
var valu= new Number(document.querySelector('.kwota').innerHTML.replace(' ','').replace(',','.').replace('zł','').replace('&nbsp;',''));
console.log('kwota'+valu);
console.log('nrazam'+nrzam);


gtag("event", "purchase", {
    transaction_id: nrzam,
    value: valu,
    tax: 23,
    shipping: 0,
    currency: "PLN",
    coupon: "None",
    items: [

     {
     item_id: nrzam,
     item_name: "Zamówienie",
     affiliation: "Zamówienie",
     coupon: "None",
     discount: 0,
     index: 0,
     item_brand: "Medorto",
     item_category: "Medorto",
     item_category2: "Medorto",
     item_category3: "Medorto",
     item_category4: "Medorto",
     item_category5: "Medorto",
     item_list_id: "Medorto",
     item_list_name: "Medorto Products",
     item_variant: "Medorto",
     location_id: "Medorto",
     price: valu,
     quantity: 1
    }]
});
}
</script>

{% endverbatim %}

{% endblock %}
